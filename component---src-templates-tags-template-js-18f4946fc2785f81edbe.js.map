{"version":3,"file":"component---src-templates-tags-template-js-18f4946fc2785f81edbe.js","mappings":"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","sources":["webpack://gatsby-starter-glass/./src/components/ImageGroup.js","webpack://gatsby-starter-glass/./src/components/post-list.js","webpack://gatsby-starter-glass/./src/components/styled-link.js","webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/tags-template.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 20px 0px;\n\n  img {\n    min-width: 45%;\n    margin: 10px;\n  }\n`;\n\nconst ImageGroup = ({ children }) => {\n  return <ImageContainer>{children}</ImageContainer>;\n};\n\nexport default ImageGroup;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Tags from \"./tags\";\nimport ImageGroup from '../components/ImageGroup';\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n    <PostListMeta>\n        <span>{date}</span>\n\n        <span>{timeToRead} mins</span>\n      </PostListMeta>\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n\n      <Tags tags={tags} />\n    </StyledPostListItem>\n  );\n};\n\n\nconst StyledPostList = styled.ul`\n  padding-left: 10rem;\n  padding-right: 10rem;\n  list-style: none;\n  display: block;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 800px) {\n    & {\n      display: block;\n      padding-left: 2rem;\n      padding-right: 2rem;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  display: flex;\n  padding: 2rem;\n  margin-top: 2rem;\n  border-radius: 8px;\n  position: relative;\n  flex-direction: column;\n  transition: all 0.3s ease-out;\n\n  body.light-mode & {\n    backdrop-filter: blur(10px);\n    border: 4px solid #000000;\n    background-color: #ff93eb5f;\n  }\n\n  body.light-mode &:hover {\n    background-color: rgba(255, 255, 255, 0.184);\n  }\n\n  body.dark-mode & {\n    background-color: #ff93eb51;\n    backdrop-filter: blur(20px);\n    border: 4px solid #000000;\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  margin-bottom: 2rem;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-bottom: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  color: inherit;\n  background-color: rgba(255, 255, 255, 0.4);\n  text-decoration: none;\n  border-radius: 0px;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  text-transform: uppercase;\n  border-radius: 4px;\n`;\n\nexport default StyledLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join(\"-\");\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  display: inline-block;\n  // margin-top: 1rem;\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  margin-left: 0;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  body.light-mode & a {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.7);\n  }\n\n  body.light-mode & a:hover {\n    background-color: rgba(255, 255, 255, 1);\n  }\n\n  body.dark-mode & a {\n    background-color: #212122;\n    border: 1px solid #1a1a1b;\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport StyledLink from '../components/styled-link';\nimport styled from 'styled-components';\n\nconst TagsTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const posts = data.allMarkdownRemark.nodes;\n  const title = `Posts tagged ${tag}`;\n\n  return (\n    <Layout title={title}>\n      <TagsTemplateWrapper>\n        <Title>\n          {totalCount} posts tagged \"{tag}\"\n        </Title>\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          view all tags\n        </Link>\n        <PostList posts={posts} />\n\n        <StyledLink\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n          `}\n          to=\"/tags\"\n        >\n          View All tags\n        </StyledLink>\n      </TagsTemplateWrapper>\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nconst TagsTemplateWrapper = styled.div`\n  padding-top: var(--size-900);\n`;\n\nconst Title = styled.h1`\n  font-size: var(--size-700);\n`;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: { contentType: { eq: \"posts\" } }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          tags\n          title\n        }\n        timeToRead\n        excerpt\n      }\n    }\n  }\n`;\n"],"names":["styled","displayName","componentId","_ref","posts","PostList","map","_ref2","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","React","PostListItem","key","StyledPostList","_ref3","StyledPostListItem","PostListMeta","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","Tags","StyledLink","withConfig","tag","Tag","str","match","x","toLowerCase","join","pageContext","data","totalCount","allMarkdownRemark","nodes","Layout","TagsTemplateWrapper","Title","_StyledLink","_StyledStyledLink"],"sourceRoot":""}